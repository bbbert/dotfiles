#!/bin/bash

# enables bash aliases to still work after sudo
alias sudo='sudo '

# cd
alias cd..='cd ..'
alias ..='cd ..'

for UPLEVEL in {2..5}; do
  UPLEVEL_TARGET=$(printf '../%.0s' $(seq 1 $UPLEVEL))
  UPLEVEL_DOTS=$(printf '.%.0s' $(seq 1 $UPLEVEL))
  alias ..$UPLEVEL="cd $UPLEVEL_TARGET"
  alias .$UPLEVEL_DOTS="cd $UPLEVEL_TARGET"
done

# ls
alias ll='ls -lAF'
alias la='ls -A'
alias l='ls -CF'
alias lh='ls -lAFH'
alias llr='ls -lAR'

# aliases for apt/apt-get/apt-cache if they exist
if
  command -v apt &> /dev/null && \
  command -v sudo &> /dev/null; then

  alias apts='apt search'
  alias aptsh='apt show'
  alias apti='sudo apt install'
  alias aptiy='sudo apt install -y'
  alias aptr='sudo apt remove'
  alias apta='sudo apt autoremove'
  alias aptu='sudo apt update'

elif
  command -v apt-get &> /dev/null && \
  command -v apt-cache &> /dev/null && \
  command -v sudo &> /dev/null; then

  alias apts='apt-cache search'
  alias aptsh='apt-cache show'
  alias apti='sudo apt-get install'
  alias aptiy='sudo apt-get install -y'
  alias aptr='sudo apt-get remove'
  alias apta='sudo apt-get autoremove'
  alias aptu='sudo apt-get update'
fi

# alias xdg-open to open
if command -v xdg-open &> /dev/null; then
  if command -v nohup &> /dev/null; then
    # run in the background and don't quit if the terminal quits
		function open() {
      nohup xdg-open $@ > /dev/null 2>&1 &
    }
  else
    # run in the foreground
    alias open='xdg-open &>/dev/null'
  fi
fi

# alert message using notify-send
if command -v notify-send &> /dev/null; then
  # show a desktop notification when the command ends
  # e.g.
  #   $ sleep 10; alert
  alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history | tail -n1 | sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
fi

# vim
if command -v nvim &> /dev/null; then
  alias vim='nvim'
fi
alias svim='sudo vim'

# misc
alias histgrep='history | grep'

# dns
function flush_dns() {
  if command -v systemd-resolve &> /dev/null; then
    sudo systemd-resolve --flush-caches
  elif command -v systemctl &> /dev/null && \
    systemctl cat nscd > /dev/null; then
    sudo systemctl restart nscd
  fi
}
